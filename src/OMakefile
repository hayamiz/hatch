#
# This project requires ocamlfind (default - false).
#
USE_OCAMLFIND = true
#
OCAMLPACKS[] =
   unix

if $(not $(OCAMLFIND_EXISTS))
   eprintln(This project requires ocamlfind, but is was not found.)
   eprintln(You need to install ocamlfind and run "omake --configure".)
   exit 1

#
# Include path
#
# OCAMLINCLUDES +=

#
# Compile native or byte code? 
#
# The default values are defined as follows:
#
# NATIVE_ENABLED = $(OCAMLOPT_EXISTS)
# BYTE_ENABLED = $(not $(OCAMLOPT_EXISTS))

#
# Various options
#
# OCAMLFLAGS    +=
# OCAMLCFLAGS   +=
# OCAMLOPTFLAGS +=
# OCAML_LINK_FLAGS +=
# OCAML_BYTE_LINK_FLAGS +=
# OCAML_NATIVE_LINK_FLAGS +=

################################################
# Generated files
#
# Workaround for the fact that ocamldep does not pay attention to .mll
# and .mly files.
#
OCAMLDEP_MODULES_ENABLED = false
OCamlGeneratedFiles(lexer.ml parser.ml)

################################################
# Build an OCaml program
#

FILES[] =
    symbol
    smap
    syntax
    lexer
    parser
    parserUtil
    normal
    alpha
    beta
    constfold
    main

PROGRAM = hatch
LIB = libhatch

OCAML_LIBS +=
OCAML_CLIBS +=
OCAML_OTHER_LIBS += str
OCAML_LIB_FLAGS +=

.DEFAULT: $(OCamlLibrary $(LIB), $(FILES))
.DEFAULT: $(OCamlProgram $(PROGRAM), $(FILES))

.PHONY: clean

clean:
  rm -f lexer.ml parser.ml parser.mli *~ *.opt *.cmi *.cmx *.o *.omc *.cma *.cmxa *.a $(PROGRAM)